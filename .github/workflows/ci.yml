name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - name: Check formatting
        run: cargo fmt --all -- --check
      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Build
        run: cargo build --release
      - name: Run tests
        run: cargo test --all --release
      - name: Run security fuzzing
        run: cargo test --test security_fuzzing --release

  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Build release
        run: cargo build --release
      - name: Run benchmarks
        run: cargo bench --bench blockchain_bench

  testnet:
    name: Multi-Node Testnet Simulation
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Build SpiraChain
        run: cargo build --release
      - name: Deploy 3-node testnet
        run: bash scripts/deploy_testnet.sh deploy
      - name: Wait for block production
        run: sleep 120
      - name: Check testnet status
        run: bash scripts/deploy_testnet.sh status
      - name: Run benchmark suite
        run: python3 scripts/benchmark_complete.py
      - name: Upload benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: benchmark_complete.json
      - name: Stop testnet
        run: bash scripts/deploy_testnet.sh stop

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-audit
        run: cargo install cargo-audit
      - name: Run security audit
        run: cargo audit
      - name: Check dependencies
        run: cargo tree --duplicates

  docker:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    needs: [test, testnet]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/spirachain:latest
            ${{ secrets.DOCKER_USERNAME }}/spirachain:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

